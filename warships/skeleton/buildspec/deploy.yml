version: 0.2

phases:
  install:
    commands:
      - |
          set -ex
          env | sort
          ls -la
          pwd
          echo "
            stack_name ${APP_NAME}
            environment ${ENVIRONMENT}
            aws_region ${AWS_REGION}
            security_group_id ${SECGROUP_ID}
          "

  build:
    commands:
      - |
          set -ex
          ls -la
          pwd
          cd warships/${APP_NAME}
          pwd
          echo deploy nomadic ${APP_NAME} ${ENVIRONMENT}
          PUBLIC_IP=$(curl ipecho.net/plain)
          echo ${SECGROUP_ID} ${PUBLIC_IP}
          aws ec2 authorize-security-group-ingress \
            --group-id ${SECGROUP_ID} \
            --protocol tcp \
            --port 22 \
            --cidr ${PUBLIC_IP}/32 || true
          mkdir -pv /home/ec2-user/.ssh

          echo get nomadic leader
          NOMADIC_LEADER=$(aws ssm get-parameter \
            --region us-east-1 \
            --name nomadic_instance_ips \
            --with-decryption \
            --query Parameter.Value \
            --output text | cut -d',' -f1)

          echo configure private key
          aws ssm get-parameter \
            --region us-east-1 \
            --name nomadic_ssh_key \
            --with-decryption \
            --query Parameter.Value \
            --output text | tee /home/ec2-user/.ssh/ssh.key
          chmod -c 0400 /home/ec2-user/.ssh/ssh.key

          echo deploy and or update nomad job
          ssh -i /home/ec2-user/.ssh/ssh.key -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" ec2-user@$${NOMADIC_LEADER} hostname

          ssh -i /home/ec2-user/.ssh/ssh.key -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" ec2-user@$${NOMADIC_LEADER} wget -O /home/ec2-user/nomadic.hcl https://raw.githubusercontent.com/nand0p/nomadic/master/warships/nomadic_application_example.hcl

          ssh -i /home/ec2-user/.ssh/ssh.key -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" ec2-user@$${NOMADIC_LEADER} nomad job run /home/ec2-user/nomadic.hcl

    finally:
      - aws --region us-east-1 ec2 revoke-security-group-ingress --group-id ${SECGROUP_ID} --protocol tcp --port 22 --cidr ${PUBLIC_IP}/32
      - rm -fv /home/ec2-user/.ssh/ssh.key

artifacts:
  files:
    - "**/*"
