on: [ push, pull_request ]

jobs:
  build:
    environment: gha-ci
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
    steps:
      - uses: actions/checkout@v2

      - name: set up terraform ${{ matrix.os }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: configure environment
        run: |
          mkdir -vp ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "provider \"aws\" { region = \"us-east-1\" }" > terraform.tf
          cat terraform.tf
          echo "provider \"aws\" { region = \"us-east-1\" }" > warships/terraform.tf
          cat warships/terraform.tf
          echo "provider \"aws\" { region = \"us-east-1\" }" > warships/skeleton/terraform.tf
          cat warships/skeleton/terraform.tf


      - name: terraform cluster fmt check
        run: terraform fmt -check

      - name: terraform cluster init
        run: terraform init

      - name: terraform cluster plan
        run: terraform plan


      - name: terraform warship shared syntax check
        run: terraform fmt -check
        working-directory: warships

      - name: terraform warship shared init
        run: terraform init
        working-directory: warships

      - name: terraform warship shared plan
        run: terraform plan
        working-directory: warships


      - name: terraform warship skeleton syntax check
        run: terraform fmt -check
        working-directory: warships/skeleton

      - name: terraform warship skeleton init
        run: terraform init
        working-directory: warships/skeleton

      - name: terraform warship skeleton plan
        run: terraform plan
        working-directory: warships/skeleton
